{"version":3,"sources":["webpack:///./src/components/blog-list.js","webpack:///./src/pages/blog.js"],"names":["initialState","categories","posts","BlogItem","children","className","key","slug","featuredImage","to","dangerouslySetInnerHTML","__html","title","excerpt","BlogList","props","buttonList","map","node","edges","name","Set","concat","apply","sort","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","categoryTerms","setcategoryTerms","handleCategory","event","target","value","useEffect","results","filter","post","toLowerCase","includes","length","indexOf","type","placeholder","onChange","style","minWidth","category","onClick","pageQuery","IndexPage","data","description","wpgraphql"],"mappings":"umCAIA,IAAMA,EAAe,CACnBC,WAAY,GACZC,MAAO,IAGHC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,yBAAKC,UAAU,yBAAyBC,IAAKF,EAASG,MACnD,OAASH,EAASI,eACjB,yBAAKH,UAAU,iCAIjB,6BACE,kBAAC,OAAD,CAAMI,GAAE,IAAML,EAASG,MACrB,wBAAIG,wBAAyB,CAAEC,OAAQP,EAASQ,UAElD,yBAAKF,wBAAyB,CAAEC,OAAQP,EAASS,cA2G1CC,EArGE,SAAAC,GACf,IAAIC,EAAa,GACjBhB,EAAaE,MAAQa,EAAMX,SAASa,KAAI,YACtC,OADoD,EAAXC,QAG3ClB,EAAaC,WAAac,EAAMX,SAASa,KAAI,YAC3C,OADyD,EAAXC,KAClCjB,WAAWkB,MAAMF,KAAI,YAC/B,OAD6C,EAAXC,KACtBE,WAIhBJ,EAAa,EACR,IAAIK,IAAI,GAAGC,OAAOC,MAAM,GAAIvB,EAAaC,cAC5CuB,OAbsB,MAeYC,mBAAS,IAAtCC,EAfiB,KAeLC,EAfK,OAgBkBF,mBAAS,IAA5CG,EAhBiB,KAgBFC,EAhBE,OAiBkBJ,mBAAS,IAA5CK,EAjBiB,KAiBFC,EAjBE,KAuBlBC,EAAiB,SAAAC,GACrB,GAAI,eAAiBA,EAAMC,OAAOC,MAGhC,OAFAJ,EAAiBD,EAAcR,OAAOW,EAAMC,OAAOC,aACnDR,EAAc,IAGhBA,EAAc,IACdI,EAAiB,KAuBnB,OApBAK,qBAAU,WACR,IAAMC,EAAUrC,EAAaE,MAAMoC,QAAO,SAAAC,GACxC,OAAOA,EAAK3B,MAAM4B,cAAcC,SAASf,EAAWc,kBAEtDX,EAAiBQ,KAChB,CAACX,IAEJU,qBAAU,WACR,IAAIC,EAAUrC,EAAaE,MACvB,IAAM4B,EAAcY,SACtBL,EAAUrC,EAAaE,MAAMoC,QAAO,SAAAC,GAIlC,OAAQ,EAHeA,EAAKtC,WAAWkB,MAAMF,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClD,OAAQ,EAAIY,EAAca,QAAQzB,EAAKE,SAEduB,SAAQ,OAGvCd,EAAiBQ,KAChB,CAACP,IAGF,oCACE,mEACA,2BACEc,KAAK,OACLC,YAAY,iCACZC,SAxCe,SAAAb,GACnBN,EAAcM,EAAMC,OAAOC,QAwCvBY,MAAO,CAAEC,SAAU,SACnBb,MAAOT,IAET,6BACA,6BACA,yBAAKrB,UAAU,wBACZW,EAAWC,KAAI,SAAAgC,GACd,OACE,4BACE3C,IAAK2C,EACL5C,UACE,qBAA0ByB,EAAca,QAAQM,GAC5C,yBACA,2BAENd,MAAOc,EACPC,QAASlB,GAERiB,MAIP,4BACE5C,UAAU,oBACV8B,MAAM,aACNe,QAASlB,GAHX,cASF,6BACA,6BACA,6BACCJ,EAAcX,KAAI,SAAAsB,GAAI,OACrB,kBAAC,EAAD,CAAUjC,IAAKiC,EAAKhC,MAAOgC,Q,YCnFtBY,GAFEC,UA9BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,CAAQhD,UAAU,qBAChB,kBAAC,IAAD,CAAKO,MAAM,gBAAgB0C,YAAY,+BAEvC,4CAEA,kBAAC,EAAD,KAAWD,EAAKE,UAAUrD,MAAMiB,SA0Bd","file":"component---src-pages-blog-js-de13de23801710a0e7f1.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\n\r\nconst initialState = {\r\n  categories: \"\",\r\n  posts: \"\",\r\n};\r\n\r\nconst BlogItem = ({ children }) => {\r\n  return (\r\n    <div className=\"blog-archive-container\" key={children.slug}>\r\n      {null !== children.featuredImage && (\r\n        <div className=\"blog-archive-image-container\">\r\n\r\n        </div>\r\n      )}\r\n      <div>\r\n        <Link to={`/${children.slug}`}>\r\n          <h3 dangerouslySetInnerHTML={{ __html: children.title }} />\r\n        </Link>\r\n        <div dangerouslySetInnerHTML={{ __html: children.excerpt }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BlogList = props => {\r\n  let buttonList = [];\r\n  initialState.posts = props.children.map(({ node }) => {\r\n    return node;\r\n  });\r\n  initialState.categories = props.children.map(({ node }) => {\r\n    return node.categories.edges.map(({ node }) => {\r\n      return node.name;\r\n    });\r\n  });\r\n\r\n  buttonList = [\r\n    ...new Set([].concat.apply([], initialState.categories)),\r\n  ].sort();\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [categoryTerms, setcategoryTerms] = useState([]);\r\n\r\n  const handleSearch = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleCategory = event => {\r\n    if (\"clearTerms\" !== event.target.value) {\r\n      setcategoryTerms(categoryTerms.concat(event.target.value));\r\n      setSearchTerm(\"\");\r\n      return;\r\n    }\r\n    setSearchTerm(\"\");\r\n    setcategoryTerms([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = initialState.posts.filter(post => {\r\n      return post.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n    });\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    let results = initialState.posts;\r\n    if (0 !== categoryTerms.length) {\r\n      results = initialState.posts.filter(post => {\r\n        const postCategories = post.categories.edges.map(({ node }) => {\r\n          return -1 < categoryTerms.indexOf(node.name) ? true : false; //return if the category name is in the terms to search for.\r\n        });\r\n        return -1 < postCategories.indexOf(true) ? true : false; // return this post of any of the categories are true.\r\n      });\r\n    }\r\n    setSearchResults(results);\r\n  }, [categoryTerms]);\r\n\r\n  return (\r\n    <>\r\n      <p>Search posts by title or category...</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type to fileter posts by title\"\r\n        onChange={handleSearch}\r\n        style={{ minWidth: \"300px\" }}\r\n        value={searchTerm}\r\n      />\r\n      <br />\r\n      <br />\r\n      <div className=\"category-button-list\">\r\n        {buttonList.map(category => {\r\n          return (\r\n            <button\r\n              key={category}\r\n              className={\r\n                \"btn btn-primary \" + -1 < categoryTerms.indexOf(category)\r\n                  ? \"btn btn-primary active\"\r\n                  : \"btn btn-primary inactive\"\r\n              }\r\n              value={category}\r\n              onClick={handleCategory}\r\n            >\r\n              {category}\r\n            </button>\r\n          );\r\n        })}\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          value=\"clearTerms\"\r\n          onClick={handleCategory}\r\n        >\r\n          Clear All\r\n        </button>\r\n      </div>\r\n\r\n      <br />\r\n      <hr />\r\n      <br />\r\n      {searchResults.map(post => (\r\n        <BlogItem key={post.slug}>{post}</BlogItem>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport BlogList from \"../components/blog-list\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout className=\"blog-archive-page\">\r\n    <SEO title=\"Blog Archive \" description=\"A list of all the blogs...\" />\r\n\r\n    <h1>Blog Archive</h1>\r\n\r\n    <BlogList>{data.wpgraphql.posts.edges}</BlogList>\r\n    {/* {data.wpgraphql.posts.edges.map(({ node }) => (\r\n      <div className=\"blog-archive-container\" key={node.slug}>\r\n        {null !== node.featuredImage && (\r\n          <div className=\"blog-archive-image-container\">\r\n            <Link to={`/${node.slug}`}>\r\n              <Img\r\n                fixed={node.featuredImage.imageFile.childImageSharp.fixed}\r\n                alt={node.title}\r\n              />\r\n            </Link>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <Link to={`/${node.slug}`}>\r\n            <h3 dangerouslySetInnerHTML={{ __html: node.title }} />\r\n          </Link>\r\n          <div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n        </div>\r\n      </div>\r\n    ))} */}\r\n  </Layout>\r\n);\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query GET_BLOG_POSTS {\r\n    wpgraphql {\r\n      posts(first: 10000, after: null) {\r\n        edges {\r\n          node {\r\n            databaseId\r\n            slug\r\n            title\r\n            date\r\n            excerpt\r\n            categories {\r\n              edges {\r\n                node {\r\n                  name\r\n                  slug\r\n                }\r\n              }\r\n            }\r\n            content(format: RENDERED)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}